{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/Sandbox/Sandbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sandbox = ({\n  palette,\n  grid,\n  paintCell,\n  clearGrid,\n  randomizeGrid\n}) => {\n  _s();\n  const [isPainting, setIsPainting] = useState(false);\n  const [showGrid, setShowGrid] = useState(true);\n  const handleMouseDown = (rowIndex, cellIndex) => {\n    setIsPainting(true);\n    paintCell(rowIndex, cellIndex);\n  };\n  const handleMouseEnter = (rowIndex, cellIndex) => {\n    if (isPainting) {\n      paintCell(rowIndex, cellIndex);\n    }\n  };\n  const handleMouseUp = () => {\n    setIsPainting(false);\n  };\n  const handleMouseLeave = () => {\n    setIsPainting(false);\n  };\n  const toggleGridLines = () => {\n    setShowGrid(!showGrid);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sandbox\",\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sandbox-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearGrid,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: randomizeGrid,\n        children: \"Randomize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleGridLines,\n        children: \"Toggle Grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sandbox-grid ${!showGrid ? 'no-grid' : ''}`,\n      children: grid.map((row, rowIndex) => row.map((paletteIndex, cellIndex) => {\n        const tileStyle = paletteIndex !== null && palette[paletteIndex] ? palette[paletteIndex] : {};\n        const {\n          blend,\n          transform,\n          ...restOfStyles\n        } = tileStyle;\n        const cellStyle = {\n          ...restOfStyles,\n          border: blend ? 'none' : tileStyle.border,\n          borderRadius: blend ? 0 : tileStyle.borderRadius,\n          transform: transform || 'none',\n          transition: 'all 0.3s ease'\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell\",\n          onMouseDown: () => handleMouseDown(rowIndex, cellIndex),\n          onMouseEnter: () => handleMouseEnter(rowIndex, cellIndex),\n          style: cellStyle,\n          \"aria-label\": `Grid cell ${rowIndex + 1}, ${cellIndex + 1}`\n        }, `${rowIndex}-${cellIndex}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(Sandbox, \"4wN1UDNyVB/NhyiuOw06N47kfv8=\");\n_c = Sandbox;\nexport default Sandbox;\nvar _c;\n$RefreshReg$(_c, \"Sandbox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sandbox","palette","grid","paintCell","clearGrid","randomizeGrid","_s","isPainting","setIsPainting","showGrid","setShowGrid","handleMouseDown","rowIndex","cellIndex","handleMouseEnter","handleMouseUp","handleMouseLeave","toggleGridLines","className","onMouseUp","onMouseLeave","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","row","paletteIndex","tileStyle","blend","transform","restOfStyles","cellStyle","border","borderRadius","transition","onMouseDown","onMouseEnter","style","_c","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/Sandbox/Sandbox.tsx"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { TileStyle } from '../../data/types';\n\ninterface SandboxProps {\n  palette: TileStyle[];\n  grid: (number | null)[][];\n  paintCell: (row: number, col: number) => void;\n  clearGrid: () => void;\n  randomizeGrid: () => void;\n}\n\nconst Sandbox: React.FC<SandboxProps> = ({\n  palette,\n  grid,\n  paintCell,\n  clearGrid,\n  randomizeGrid,\n}) => {\n  const [isPainting, setIsPainting] = useState(false);\n  const [showGrid, setShowGrid] = useState(true);\n\n  const handleMouseDown = (rowIndex: number, cellIndex: number) => {\n    setIsPainting(true);\n    paintCell(rowIndex, cellIndex);\n  };\n\n  const handleMouseEnter = (rowIndex: number, cellIndex: number) => {\n    if (isPainting) {\n      paintCell(rowIndex, cellIndex);\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsPainting(false);\n  };\n\n  const handleMouseLeave = () => {\n    setIsPainting(false);\n  };\n\n  const toggleGridLines = () => {\n    setShowGrid(!showGrid);\n  };\n\n  return (\n    <div className=\"sandbox\" onMouseUp={handleMouseUp} onMouseLeave={handleMouseLeave}>\n      <div className=\"sandbox-controls\">\n        <button onClick={clearGrid}>Clear</button>\n        <button onClick={randomizeGrid}>Randomize</button>\n        <button onClick={toggleGridLines}>Toggle Grid</button>\n      </div>\n      <div className={`sandbox-grid ${!showGrid ? 'no-grid' : ''}`}>\n        {grid.map((row, rowIndex) =>\n          row.map((paletteIndex, cellIndex) => {\n            const tileStyle = paletteIndex !== null && palette[paletteIndex] ? palette[paletteIndex] : {};\n            const { blend, transform, ...restOfStyles } = tileStyle;\n\n            const cellStyle: React.CSSProperties = {\n              ...restOfStyles,\n              border: blend ? 'none' : tileStyle.border,\n              borderRadius: blend ? 0 : tileStyle.borderRadius,\n              transform: transform || 'none',\n              transition: 'all 0.3s ease',\n            };\n\n            return (\n              <div\n                key={`${rowIndex}-${cellIndex}`}\n                className=\"grid-cell\"\n                onMouseDown={() => handleMouseDown(rowIndex, cellIndex)}\n                onMouseEnter={() => handleMouseEnter(rowIndex, cellIndex)}\n                style={cellStyle}\n                aria-label={`Grid cell ${rowIndex + 1}, ${cellIndex + 1}`}\n              />\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Sandbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}