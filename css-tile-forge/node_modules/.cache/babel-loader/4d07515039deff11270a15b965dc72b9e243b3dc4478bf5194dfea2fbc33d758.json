{"ast":null,"code":"export function buildTransformString(transformVal) {\n  if (!transformVal) return 'none';\n  const parts = [];\n  if (transformVal.translateX !== undefined && transformVal.translateX !== 0) parts.push(`translateX(${transformVal.translateX}px)`);\n  if (transformVal.translateY !== undefined && transformVal.translateY !== 0) parts.push(`translateY(${transformVal.translateY}px)`);\n  if (transformVal.rotate !== undefined && transformVal.rotate !== 0) parts.push(`rotate(${transformVal.rotate}deg)`);\n  if (transformVal.scaleX !== undefined && transformVal.scaleX !== 1) parts.push(`scaleX(${transformVal.scaleX})`);\n  if (transformVal.scaleY !== undefined && transformVal.scaleY !== 1) parts.push(`scaleY(${transformVal.scaleY})`);\n  return parts.length > 0 ? parts.join(' ') : 'none';\n}\nexport function buildFilterString(filterVal) {\n  if (!filterVal) return 'none';\n  const filters = [];\n  if (filterVal.blur !== undefined && filterVal.blur > 0) {\n    filters.push(`blur(${filterVal.blur}px)`);\n  }\n  if (filterVal.brightness !== undefined && filterVal.brightness !== 1) {\n    filters.push(`brightness(${filterVal.brightness})`);\n  }\n  if (filterVal.contrast !== undefined && filterVal.contrast !== 1) {\n    filters.push(`contrast(${filterVal.contrast})`);\n  }\n  if (filterVal.grayscale !== undefined && filterVal.grayscale > 0) {\n    filters.push(`grayscale(${filterVal.grayscale})`);\n  }\n  if (filterVal.hueRotate !== undefined && filterVal.hueRotate > 0) {\n    filters.push(`hue-rotate(${filterVal.hueRotate}deg)`);\n  }\n  if (filterVal.invert !== undefined && filterVal.invert > 0) {\n    filters.push(`invert(${filterVal.invert})`);\n  }\n  if (filterVal.saturate !== undefined && filterVal.saturate !== 1) {\n    filters.push(`saturate(${filterVal.saturate})`);\n  }\n  if (filterVal.sepia !== undefined && filterVal.sepia > 0) {\n    filters.push(`sepia(${filterVal.sepia})`);\n  }\n  return filters.length > 0 ? filters.join(' ') : 'none';\n}\nexport function buildGradientString(gradientVal) {\n  if (!gradientVal || !gradientVal.colors || gradientVal.colors.length < 2) {\n    return '';\n  }\n  const {\n    type = 'linear',\n    angle = 90,\n    colors\n  } = gradientVal;\n  if (type === 'radial') {\n    return `radial-gradient(circle, ${colors.join(', ')})`;\n  }\n  return `linear-gradient(${angle}deg, ${colors.join(', ')})`;\n}\nexport const buildCompleteStyle = tileStyle => {\n  const newStyles = {};\n  let borderRadius = undefined;\n  for (const key in tileStyle) {\n    const value = tileStyle[key];\n    if (value === undefined || value === null) continue;\n    switch (key) {\n      case 'backgroundColor':\n        newStyles.backgroundColor = value;\n        break;\n      case 'backgroundImage':\n        if (typeof value === 'object' && value !== null && value.colors) {\n          newStyles.backgroundImage = buildGradientString(value);\n        }\n        break;\n      case 'border':\n      case 'borderTop':\n      case 'borderRight':\n      case 'borderBottom':\n      case 'borderLeft':\n        if (typeof value === 'object' && value !== null) {\n          const border = value;\n          newStyles[key] = `${border.width}px ${border.style} ${border.color}`;\n        }\n        break;\n      case 'borderRadius':\n        borderRadius = `${value}px`;\n        break;\n      case 'opacity':\n        newStyles.opacity = value;\n        break;\n      case 'boxShadow':\n        if (typeof value === 'object' && value !== null) {\n          const shadow = value;\n          newStyles.boxShadow = `${shadow.x}px ${shadow.y}px ${shadow.blur}px ${shadow.spread}px ${shadow.color}`;\n        }\n        break;\n      case 'transform':\n        if (typeof value === 'object' && value !== null) {\n          newStyles.transform = buildTransformString(value);\n        }\n        break;\n      case 'filter':\n        if (typeof value === 'object' && value !== null) {\n          newStyles.filter = buildFilterString(value);\n        }\n        break;\n      default:\n        // For any other CSS properties that are directly assignable\n        if (key !== 'blend') {\n          newStyles[key] = value;\n        }\n        break;\n    }\n  }\n  if (borderRadius) {\n    newStyles.borderRadius = borderRadius;\n  }\n  return newStyles;\n};","map":{"version":3,"names":["buildTransformString","transformVal","parts","translateX","undefined","push","translateY","rotate","scaleX","scaleY","length","join","buildFilterString","filterVal","filters","blur","brightness","contrast","grayscale","hueRotate","invert","saturate","sepia","buildGradientString","gradientVal","colors","type","angle","buildCompleteStyle","tileStyle","newStyles","borderRadius","key","value","backgroundColor","backgroundImage","border","width","style","color","opacity","shadow","boxShadow","x","y","spread","transform","filter"],"sources":["/home/user/TileMonster/css-tile-forge/src/utils/styleHelpers.ts"],"sourcesContent":["import { TileStyle } from '../data/types';\nimport React from 'react';\n\nexport function buildTransformString(transformVal: any): string {\n  if (!transformVal) return 'none';\n  const parts = [];\n  if (transformVal.translateX !== undefined && transformVal.translateX !== 0) parts.push(`translateX(${transformVal.translateX}px)`);\n  if (transformVal.translateY !== undefined && transformVal.translateY !== 0) parts.push(`translateY(${transformVal.translateY}px)`);\n  if (transformVal.rotate !== undefined && transformVal.rotate !== 0) parts.push(`rotate(${transformVal.rotate}deg)`);\n  if (transformVal.scaleX !== undefined && transformVal.scaleX !== 1) parts.push(`scaleX(${transformVal.scaleX})`);\n  if (transformVal.scaleY !== undefined && transformVal.scaleY !== 1) parts.push(`scaleY(${transformVal.scaleY})`);\n  return parts.length > 0 ? parts.join(' ') : 'none';\n}\n\nexport function buildFilterString(filterVal: any): string {\n  if (!filterVal) return 'none';\n  const filters: string[] = [];\n  \n  if (filterVal.blur !== undefined && filterVal.blur > 0) {\n    filters.push(`blur(${filterVal.blur}px)`);\n  }\n  if (filterVal.brightness !== undefined && filterVal.brightness !== 1) {\n    filters.push(`brightness(${filterVal.brightness})`);\n  }\n  if (filterVal.contrast !== undefined && filterVal.contrast !== 1) {\n    filters.push(`contrast(${filterVal.contrast})`);\n  }\n  if (filterVal.grayscale !== undefined && filterVal.grayscale > 0) {\n    filters.push(`grayscale(${filterVal.grayscale})`);\n  }\n  if (filterVal.hueRotate !== undefined && filterVal.hueRotate > 0) {\n    filters.push(`hue-rotate(${filterVal.hueRotate}deg)`);\n  }\n  if (filterVal.invert !== undefined && filterVal.invert > 0) {\n    filters.push(`invert(${filterVal.invert})`);\n  }\n  if (filterVal.saturate !== undefined && filterVal.saturate !== 1) {\n    filters.push(`saturate(${filterVal.saturate})`);\n  }\n  if (filterVal.sepia !== undefined && filterVal.sepia > 0) {\n    filters.push(`sepia(${filterVal.sepia})`);\n  }\n\n  return filters.length > 0 ? filters.join(' ') : 'none';\n}\n\nexport function buildGradientString(gradientVal: any): string {\n  if (!gradientVal || !gradientVal.colors || gradientVal.colors.length < 2) {\n    return '';\n  }\n\n  const { type = 'linear', angle = 90, colors } = gradientVal;\n  \n  if (type === 'radial') {\n    return `radial-gradient(circle, ${colors.join(', ')})`;\n  }\n  \n  return `linear-gradient(${angle}deg, ${colors.join(', ')})`;\n}\n\nexport const buildCompleteStyle = (tileStyle: TileStyle): React.CSSProperties => {\n    const newStyles: React.CSSProperties = {};\n    let borderRadius: string | undefined = undefined;\n    for (const key in tileStyle) {\n        const value = tileStyle[key as keyof TileStyle];\n        if (value === undefined || value === null) continue;\n\n        switch (key) {\n            case 'backgroundColor':\n                newStyles.backgroundColor = value as string;\n                break;\n            case 'backgroundImage':\n                if (typeof value === 'object' && value !== null && (value as any).colors) {\n                    newStyles.backgroundImage = buildGradientString(value);\n                }\n                break;\n            case 'border':\n            case 'borderTop':\n            case 'borderRight':\n            case 'borderBottom':\n            case 'borderLeft':\n                if (typeof value === 'object' && value !== null) {\n                    const border = value as { width: number; style: string; color: string };\n                    newStyles[key] = `${border.width}px ${border.style} ${border.color}`;\n                }\n                break;\n            case 'borderRadius':\n                borderRadius = `${value}px`;\n                break;\n            case 'opacity':\n                newStyles.opacity = value as number;\n                break;\n            case 'boxShadow':\n                if (typeof value === 'object' && value !== null) {\n                    const shadow = value as { x: number; y: number; blur: number; spread: number; color: string };\n                    newStyles.boxShadow = `${shadow.x}px ${shadow.y}px ${shadow.blur}px ${shadow.spread}px ${shadow.color}`;\n                }\n                break;\n            case 'transform':\n                if (typeof value === 'object' && value !== null) {\n                    newStyles.transform = buildTransformString(value);\n                }\n                break;\n            case 'filter':\n                if (typeof value === 'object' && value !== null) {\n                    newStyles.filter = buildFilterString(value);\n                }\n                break;\n            default:\n                // For any other CSS properties that are directly assignable\n                if (key !== 'blend') {\n                    (newStyles as any)[key] = value;\n                }\n                break;\n        }\n    }\n    if (borderRadius) {\n        newStyles.borderRadius = borderRadius;\n    }\n    return newStyles;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}