{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/AttributePanel/AttributePanel.tsx\";\nimport React from 'react';\nimport { CSS_ATTRIBUTES } from '../../data/css-attributes';\nimport AttributeBox from '../AttributeBox/AttributeBox';\n\n// Represents an attribute that has been added to the style\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet nextId = 0;\nconst getNextId = () => `attr-${nextId++}`;\n\n// Group attributes by category for the dropdown\nconst attributeGroups = CSS_ATTRIBUTES.reduce((acc, attr) => {\n  acc[attr.category] = acc[attr.category] || [];\n  acc[attr.category].push(attr);\n  return acc;\n}, {});\nconst AttributePanel = ({\n  attributes,\n  setAttributes\n}) => {\n  const addAttribute = attributeId => {\n    if (!attributeId) return;\n    const definition = CSS_ATTRIBUTES.find(attr => attr.id === attributeId);\n    if (!definition) return;\n\n    // Prevent adding multiple of certain unique attributes\n    if ((definition.id === 'backgroundColor' || definition.id === 'opacity') && attributes.some(attr => attr.definition.id === definition.id)) {\n      alert(`The ${definition.label} attribute can only be added once.`);\n      return;\n    }\n    const newAttribute = {\n      id: getNextId(),\n      definition,\n      value: definition.defaultValue\n    };\n    setAttributes([...attributes, newAttribute]);\n  };\n  const removeAttribute = id => {\n    setAttributes(attributes.filter(attr => attr.id !== id));\n  };\n  const updateAttribute = (id, newValue) => {\n    setAttributes(attributes.map(attr => attr.id === id ? {\n      ...attr,\n      value: newValue\n    } : attr));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attribute-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attribute-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => {\n          addAttribute(e.target.value);\n          e.target.value = \"\";\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Add Attribute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), Object.entries(attributeGroups).map(([category, attrs]) => /*#__PURE__*/_jsxDEV(\"optgroup\", {\n          label: category,\n          children: attrs.map(attr => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: attr.id,\n            children: attr.label\n          }, attr.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this))\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attribute-boxes\",\n      children: attributes.map(attr => /*#__PURE__*/_jsxDEV(AttributeBox, {\n        attribute: attr,\n        onRemove: () => removeAttribute(attr.id),\n        onUpdate: newValue => updateAttribute(attr.id, newValue)\n      }, attr.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = AttributePanel;\nexport default AttributePanel;\nvar _c;\n$RefreshReg$(_c, \"AttributePanel\");","map":{"version":3,"names":["React","CSS_ATTRIBUTES","AttributeBox","jsxDEV","_jsxDEV","nextId","getNextId","attributeGroups","reduce","acc","attr","category","push","AttributePanel","attributes","setAttributes","addAttribute","attributeId","definition","find","id","some","alert","label","newAttribute","value","defaultValue","removeAttribute","filter","updateAttribute","newValue","map","className","children","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","attrs","attribute","onRemove","onUpdate","_c","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/AttributePanel/AttributePanel.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { CSS_ATTRIBUTES, CssAttribute } from '../../data/css-attributes';\nimport AttributeBox from '../AttributeBox/AttributeBox';\n\n// Represents an attribute that has been added to the style\nexport interface ActiveAttribute {\n  id: string; // Unique ID for this instance of the attribute\n  definition: CssAttribute;\n  value: any;\n}\n\ninterface AttributePanelProps {\n  attributes: ActiveAttribute[];\n  setAttributes: React.Dispatch<React.SetStateAction<ActiveAttribute[]>>;\n}\n\nlet nextId = 0;\nconst getNextId = () => `attr-${nextId++}`;\n\n// Group attributes by category for the dropdown\nconst attributeGroups = CSS_ATTRIBUTES.reduce((acc, attr) => {\n  acc[attr.category] = acc[attr.category] || [];\n  acc[attr.category].push(attr);\n  return acc;\n}, {} as Record<string, CssAttribute[]>);\n\nconst AttributePanel: React.FC<AttributePanelProps> = ({ attributes, setAttributes }) => {\n\n  const addAttribute = (attributeId: string) => {\n    if (!attributeId) return;\n\n    const definition = CSS_ATTRIBUTES.find(attr => attr.id === attributeId);\n    if (!definition) return;\n    \n    // Prevent adding multiple of certain unique attributes\n    if ( (definition.id === 'backgroundColor' || definition.id === 'opacity') && attributes.some(attr => attr.definition.id === definition.id) ) {\n      alert(`The ${definition.label} attribute can only be added once.`);\n      return;\n    }\n\n    const newAttribute: ActiveAttribute = {\n      id: getNextId(),\n      definition,\n      value: definition.defaultValue,\n    };\n\n    setAttributes([...attributes, newAttribute]);\n  };\n\n  const removeAttribute = (id: string) => {\n    setAttributes(attributes.filter(attr => attr.id !== id));\n  };\n\n  const updateAttribute = (id: string, newValue: any) => {\n    setAttributes(attributes.map(attr => (attr.id === id ? { ...attr, value: newValue } : attr)));\n  };\n\n  return (\n    <div className=\"attribute-panel\">\n      <div className=\"attribute-controls\">\n        <select onChange={(e) => {\n          addAttribute(e.target.value);\n          e.target.value = \"\";\n        }}>\n          <option value=\"\">Add Attribute</option>\n          {Object.entries(attributeGroups).map(([category, attrs]) => (\n            <optgroup label={category} key={category}>\n              {attrs.map(attr => (\n                <option key={attr.id} value={attr.id}>\n                  {attr.label}\n                </option>\n              ))}\n            </optgroup>\n          ))}\n        </select>\n      </div>\n      <div className=\"attribute-boxes\">\n        {attributes.map(attr => (\n          <AttributeBox\n            key={attr.id}\n            attribute={attr}\n            onRemove={() => removeAttribute(attr.id)}\n            onUpdate={(newValue) => updateAttribute(attr.id, newValue)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default AttributePanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}