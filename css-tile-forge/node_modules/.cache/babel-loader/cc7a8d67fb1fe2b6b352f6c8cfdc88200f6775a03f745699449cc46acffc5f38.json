{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/AttributeBox/AttributeBox.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// A helper component to render the correct input control for a given attribute definition\nconst AttributeControl = ({\n  definition,\n  value,\n  onChange\n}) => {\n  var _definition$options;\n  switch (definition.controlType) {\n    case 'color':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: '8px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          value: value,\n          onChange: e => onChange(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"color-preview\",\n          style: {\n            width: '24px',\n            height: '24px',\n            backgroundColor: value || 'transparent',\n            border: '1px solid #999',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    case 'slider':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: definition.min,\n          max: definition.max,\n          step: definition.step,\n          value: value,\n          onChange: e => onChange(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [value, definition.id.includes('angle') ? '°' : definition.id.includes('scale') ? '' : 'px']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this);\n    case 'select':\n      return /*#__PURE__*/_jsxDEV(\"select\", {\n        value: value,\n        onChange: e => onChange(e.target.value),\n        children: (_definition$options = definition.options) === null || _definition$options === void 0 ? void 0 : _definition$options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    case 'checkbox':\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: value,\n        onChange: e => onChange(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Unsupported Control Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 14\n      }, this);\n  }\n};\n_c = AttributeControl;\nconst AttributeBox = ({\n  attribute,\n  onRemove,\n  onUpdate\n}) => {\n  const {\n    definition,\n    value\n  } = attribute;\n  const handleSubAttributeChange = (subId, subValue) => {\n    onUpdate({\n      ...value,\n      [subId]: subValue\n    });\n  };\n  const renderMultiControls = () => {\n    if (!definition.subAttributes) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multi-control-group\",\n      children: definition.subAttributes.map(subDef => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-attribute-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [subDef.label, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AttributeControl, {\n          definition: subDef,\n          value: value[subDef.id],\n          onChange: newValue => handleSubAttributeChange(subDef.id, newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, subDef.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attribute-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attribute-box-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: definition.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRemove,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attribute-box-controls\",\n      children: definition.controlType === 'multi' ? renderMultiControls() : /*#__PURE__*/_jsxDEV(AttributeControl, {\n        definition: definition,\n        value: value,\n        onChange: onUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_c2 = AttributeBox;\nexport default AttributeBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"AttributeControl\");\n$RefreshReg$(_c2, \"AttributeBox\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AttributeControl","definition","value","onChange","_definition$options","controlType","style","display","alignItems","gap","children","type","e","target","fileName","_jsxFileName","lineNumber","columnNumber","className","width","height","backgroundColor","border","borderRadius","min","max","step","parseFloat","id","includes","options","map","option","label","checked","_c","AttributeBox","attribute","onRemove","onUpdate","handleSubAttributeChange","subId","subValue","renderMultiControls","subAttributes","subDef","newValue","onClick","_c2","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/AttributeBox/AttributeBox.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { ActiveAttribute } from '../AttributePanel/AttributePanel';\n\ninterface AttributeBoxProps {\n  attribute: ActiveAttribute;\n  onRemove: () => void;\n  onUpdate: (newValue: any) => void;\n}\n\n// A helper component to render the correct input control for a given attribute definition\nconst AttributeControl: React.FC<{ definition: any, value: any, onChange: (value: any) => void }> = ({ definition, value, onChange }) => {\n  switch (definition.controlType) {\n    case 'color':\n      return (\n        <div style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n            <input type=\"color\" value={value} onChange={(e) => onChange(e.target.value)} />\n            <div\n                className=\"color-preview\"\n                style={{\n                width: '24px',\n                height: '24px',\n                backgroundColor: value || 'transparent',\n                border: '1px solid #999',\n                borderRadius: '4px',\n                }}\n            />\n        </div>\n    );\n\n    case 'slider':\n      return (\n        <div className='slider-control'>\n          <input\n            type=\"range\"\n            min={definition.min}\n            max={definition.max}\n            step={definition.step}\n            value={value}\n            onChange={(e) => onChange(parseFloat(e.target.value))}\n          />\n          <span>{value}{definition.id.includes('angle') ? '°' : definition.id.includes('scale') ? '' : 'px'}</span>\n        </div>\n      );\n\n    case 'select':\n      return (\n        <select value={value} onChange={(e) => onChange(e.target.value)}>\n          {definition.options?.map((option: { value: string; label: string }) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      );\n      \n    case 'checkbox':\n        return (\n          <input\n            type=\"checkbox\"\n            checked={value}\n            onChange={(e) => onChange(e.target.checked)}\n          />\n        );\n\n    default:\n      return <p>Unsupported Control Type</p>;\n  }\n};\n\nconst AttributeBox: React.FC<AttributeBoxProps> = ({ attribute, onRemove, onUpdate }) => {\n  const { definition, value } = attribute;\n\n  const handleSubAttributeChange = (subId: string, subValue: any) => {\n    onUpdate({ ...value, [subId]: subValue });\n  };\n\n  const renderMultiControls = () => {\n    if (!definition.subAttributes) return null;\n\n    return (\n      <div className='multi-control-group'>\n        {definition.subAttributes.map((subDef) => (\n          <div key={subDef.id} className='sub-attribute-control'>\n            <label>{subDef.label}:</label>\n            <AttributeControl\n              definition={subDef}\n              value={value[subDef.id]}\n              onChange={(newValue) => handleSubAttributeChange(subDef.id, newValue)}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"attribute-box\">\n      <div className=\"attribute-box-header\">\n        <span>{definition.label}</span>\n        <button onClick={onRemove}>X</button>\n      </div>\n      <div className=\"attribute-box-controls\">\n        {definition.controlType === 'multi' ? (\n          renderMultiControls()\n        ) : (\n          <AttributeControl\n            definition={definition}\n            value={value}\n            onChange={onUpdate}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AttributeBox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}