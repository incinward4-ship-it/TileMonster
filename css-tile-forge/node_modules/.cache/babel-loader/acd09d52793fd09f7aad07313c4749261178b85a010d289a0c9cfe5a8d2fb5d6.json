{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/Sandbox/Sandbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sandbox = ({\n  tileStyles\n}) => {\n  _s();\n  const createEmptyGrid = () => Array.from({\n    length: 32\n  }, () => Array(32).fill(false));\n  const [grid, setGrid] = useState(createEmptyGrid());\n  const [isPainting, setIsPainting] = useState(false);\n  const [showGrid, setShowGrid] = useState(true);\n  const handleMouseDown = (rowIndex, cellIndex) => {\n    setIsPainting(true);\n    const newGrid = [...grid.map(row => [...row])];\n    newGrid[rowIndex][cellIndex] = !newGrid[rowIndex][cellIndex];\n    setGrid(newGrid);\n  };\n  const handleMouseEnter = (rowIndex, cellIndex) => {\n    if (isPainting) {\n      const newGrid = [...grid.map(row => [...row])];\n      newGrid[rowIndex][cellIndex] = true;\n      setGrid(newGrid);\n    }\n  };\n  const handleMouseUp = () => {\n    setIsPainting(false);\n  };\n  const handleMouseLeave = () => {\n    setIsPainting(false);\n  };\n  const clearGrid = () => {\n    setGrid(createEmptyGrid());\n  };\n  const randomizeGrid = () => {\n    const newGrid = grid.map(row => row.map(() => Math.random() > 0.7));\n    setGrid(newGrid);\n  };\n  const toggleGridLines = () => {\n    setShowGrid(!showGrid);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sandbox\",\n    onMouseUp: handleMouseUp,\n    onMouseLeave: handleMouseLeave,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sandbox-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearGrid,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: randomizeGrid,\n        children: \"Randomize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleGridLines,\n        children: \"Toggle Grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `sandbox-grid ${!showGrid ? 'no-grid' : ''}`,\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: row.map((isFilled, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell\",\n          onMouseDown: () => handleMouseDown(rowIndex, cellIndex),\n          onMouseEnter: () => handleMouseEnter(rowIndex, cellIndex),\n          style: isFilled ? tileStyles : {}\n        }, cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Sandbox, \"f+1oQ+EIeZ3DJxIk//7JgmrZGJk=\");\n_c = Sandbox;\nexport default Sandbox;\nvar _c;\n$RefreshReg$(_c, \"Sandbox\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Sandbox","tileStyles","_s","createEmptyGrid","Array","from","length","fill","grid","setGrid","isPainting","setIsPainting","showGrid","setShowGrid","handleMouseDown","rowIndex","cellIndex","newGrid","map","row","handleMouseEnter","handleMouseUp","handleMouseLeave","clearGrid","randomizeGrid","Math","random","toggleGridLines","className","onMouseUp","onMouseLeave","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isFilled","onMouseDown","onMouseEnter","style","_c","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/Sandbox/Sandbox.tsx"],"sourcesContent":["\nimport React, { useState } from 'react';\n\ninterface SandboxProps {\n  tileStyles: React.CSSProperties;\n}\n\nconst Sandbox: React.FC<SandboxProps> = ({ tileStyles }) => {\n  const createEmptyGrid = () => Array.from({ length: 32 }, () => Array(32).fill(false));\n  const [grid, setGrid] = useState<boolean[][]>(createEmptyGrid());\n  const [isPainting, setIsPainting] = useState(false);\n  const [showGrid, setShowGrid] = useState(true);\n\n  const handleMouseDown = (rowIndex: number, cellIndex: number) => {\n    setIsPainting(true);\n    const newGrid = [...grid.map(row => [...row])];\n    newGrid[rowIndex][cellIndex] = !newGrid[rowIndex][cellIndex];\n    setGrid(newGrid);\n  };\n\n  const handleMouseEnter = (rowIndex: number, cellIndex: number) => {\n    if (isPainting) {\n      const newGrid = [...grid.map(row => [...row])];\n      newGrid[rowIndex][cellIndex] = true;\n      setGrid(newGrid);\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsPainting(false);\n  };\n\n  const handleMouseLeave = () => {\n    setIsPainting(false);\n  };\n\n  const clearGrid = () => {\n    setGrid(createEmptyGrid());\n  };\n\n  const randomizeGrid = () => {\n    const newGrid = grid.map(row => row.map(() => Math.random() > 0.7));\n    setGrid(newGrid);\n  };\n\n  const toggleGridLines = () => {\n    setShowGrid(!showGrid);\n  };\n\n  return (\n    <div className=\"sandbox\" onMouseUp={handleMouseUp} onMouseLeave={handleMouseLeave}>\n      <div className=\"sandbox-controls\">\n        <button onClick={clearGrid}>Clear</button>\n        <button onClick={randomizeGrid}>Randomize</button>\n        <button onClick={toggleGridLines}>Toggle Grid</button>\n      </div>\n      <div className={`sandbox-grid ${!showGrid ? 'no-grid' : ''}`}>\n        {grid.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"grid-row\">\n            {row.map((isFilled, cellIndex) => (\n              <div\n                key={cellIndex}\n                className=\"grid-cell\"\n                onMouseDown={() => handleMouseDown(rowIndex, cellIndex)}\n                onMouseEnter={() => handleMouseEnter(rowIndex, cellIndex)}\n                style={isFilled ? tileStyles : {}}\n              ></div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Sandbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}