{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/Sandbox/Sandbox.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sandbox = ({\n  palette,\n  grid,\n  paintCell,\n  selectedStyleIndex,\n  setSelectedStyleIndex\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sandbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"style-palette\",\n      children: palette.map((style, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `palette-style ${selectedStyleIndex === index ? 'selected' : ''}`,\n        style: style,\n        onClick: () => setSelectedStyleIndex(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sandbox-grid\",\n      children: grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-row\",\n        children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell\",\n          onClick: () => paintCell(rowIndex, cellIndex),\n          style: cell !== null ? palette[cell] : {}\n        }, cellIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = Sandbox;\nexport default Sandbox;\nvar _c;\n$RefreshReg$(_c, \"Sandbox\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Sandbox","palette","grid","paintCell","selectedStyleIndex","setSelectedStyleIndex","className","children","map","style","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","row","rowIndex","cell","cellIndex","_c","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/Sandbox/Sandbox.tsx"],"sourcesContent":["\nimport React from 'react';\n\ninterface SandboxProps {\n  palette: React.CSSProperties[];\n  grid: (number | null)[][];\n  paintCell: (row: number, col: number) => void;\n  selectedStyleIndex: number | null;\n  setSelectedStyleIndex: (index: number) => void;\n}\n\nconst Sandbox: React.FC<SandboxProps> = ({\n  palette,\n  grid,\n  paintCell,\n  selectedStyleIndex,\n  setSelectedStyleIndex,\n}) => {\n  return (\n    <div className=\"sandbox\">\n      <div className=\"style-palette\">\n        {palette.map((style, index) => (\n          <div\n            key={index}\n            className={`palette-style ${selectedStyleIndex === index ? 'selected' : ''}`}\n            style={style}\n            onClick={() => setSelectedStyleIndex(index)}\n          ></div>\n        ))}\n      </div>\n      <div className=\"sandbox-grid\">\n        {grid.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"grid-row\">\n            {row.map((cell, cellIndex) => (\n              <div\n                key={cellIndex}\n                className=\"grid-cell\"\n                onClick={() => paintCell(rowIndex, cellIndex)}\n                style={cell !== null ? palette[cell] : {}}\n              ></div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Sandbox;\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,MAAMC,OAA+B,GAAGA,CAAC;EACvCC,OAAO;EACPC,IAAI;EACJC,SAAS;EACTC,kBAAkB;EAClBC;AACF,CAAC,KAAK;EACJ,oBACEN,OAAA;IAAKO,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBR,OAAA;MAAKO,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BN,OAAO,CAACO,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACxBX,OAAA;QAEEO,SAAS,EAAE,iBAAiBF,kBAAkB,KAAKM,KAAK,GAAG,UAAU,GAAG,EAAE,EAAG;QAC7ED,KAAK,EAAEA,KAAM;QACbE,OAAO,EAAEA,CAAA,KAAMN,qBAAqB,CAACK,KAAK;MAAE,GAHvCA,KAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIN,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhB,OAAA;MAAKO,SAAS,EAAC,cAAc;MAAAC,QAAA,EAC1BL,IAAI,CAACM,GAAG,CAAC,CAACQ,GAAG,EAAEC,QAAQ,kBACtBlB,OAAA;QAAoBO,SAAS,EAAC,UAAU;QAAAC,QAAA,EACrCS,GAAG,CAACR,GAAG,CAAC,CAACU,IAAI,EAAEC,SAAS,kBACvBpB,OAAA;UAEEO,SAAS,EAAC,WAAW;UACrBK,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAACc,QAAQ,EAAEE,SAAS,CAAE;UAC9CV,KAAK,EAAES,IAAI,KAAK,IAAI,GAAGjB,OAAO,CAACiB,IAAI,CAAC,GAAG,CAAC;QAAE,GAHrCC,SAAS;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACP;MAAC,GARME,QAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAnCIpB,OAA+B;AAqCrC,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}