{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/Sandbox/Sandbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useLayoutEffect, useEffect } from 'react';\nimport { buildCompleteStyle } from '../../utils/styleHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MIN_GRID_SIZE = 16;\nconst MAX_GRID_SIZE = 64;\nconst ZOOM_LEVELS = [12, 18, 24]; // Cell sizes in pixels\n\nconst Sandbox = ({\n  palette,\n  grid,\n  paintCell,\n  clearGrid,\n  randomizeGrid,\n  setGrid\n}) => {\n  _s();\n  var _grid$, _grid$3;\n  const [isPainting, setIsPainting] = useState(false);\n  const [showGridLines, setShowGridLines] = useState(true);\n  const [zoomLevel, setZoomLevel] = useState(1); // Index for ZOOM_LEVELS\n  const [gridDimensions, setGridDimensions] = useState({\n    rows: grid.length || 16,\n    cols: ((_grid$ = grid[0]) === null || _grid$ === void 0 ? void 0 : _grid$.length) || 16\n  });\n  const gridContainerRef = useRef(null);\n  useLayoutEffect(() => {\n    const updateGridSize = () => {\n      if (gridContainerRef.current) {\n        const {\n          width,\n          height\n        } = gridContainerRef.current.getBoundingClientRect();\n        const cellSize = ZOOM_LEVELS[zoomLevel] + (showGridLines ? 1 : 0);\n        const newCols = Math.max(MIN_GRID_SIZE, Math.min(MAX_GRID_SIZE, Math.floor(width / cellSize)));\n        const newRows = Math.max(MIN_GRID_SIZE, Math.min(MAX_GRID_SIZE, Math.floor(height / cellSize)));\n        if (newRows !== gridDimensions.rows || newCols !== gridDimensions.cols) {\n          setGridDimensions({\n            rows: newRows,\n            cols: newCols\n          });\n          const newGrid = Array.from({\n            length: newRows\n          }, (_, r) => Array.from({\n            length: newCols\n          }, (_, c) => {\n            var _grid$2;\n            return r < grid.length && c < (((_grid$2 = grid[0]) === null || _grid$2 === void 0 ? void 0 : _grid$2.length) || 0) && grid[r] ? grid[r][c] : null;\n          }));\n          setGrid(newGrid);\n        }\n      }\n    };\n    updateGridSize();\n    const resizeObserver = new ResizeObserver(updateGridSize);\n    if (gridContainerRef.current) {\n      resizeObserver.observe(gridContainerRef.current);\n    }\n    return () => resizeObserver.disconnect();\n  }, [zoomLevel, showGridLines, setGrid, grid.length, (_grid$3 = grid[0]) === null || _grid$3 === void 0 ? void 0 : _grid$3.length]);\n  useEffect(() => {}, [grid, palette]);\n  const handleMouseDown = (rowIndex, cellIndex) => {\n    setIsPainting(true);\n    paintCell(rowIndex, cellIndex);\n  };\n  const handleMouseEnter = (rowIndex, cellIndex) => {\n    if (isPainting) {\n      paintCell(rowIndex, cellIndex);\n    }\n  };\n  const getCellStyle = (rowIndex, cellIndex) => {\n    var _grid$rowIndex;\n    const paletteIndex = (_grid$rowIndex = grid[rowIndex]) === null || _grid$rowIndex === void 0 ? void 0 : _grid$rowIndex[cellIndex];\n    const baseStyle = {\n      width: `${ZOOM_LEVELS[zoomLevel]}px`,\n      height: `${ZOOM_LEVELS[zoomLevel]}px`,\n      boxSizing: 'border-box'\n    };\n    if (paletteIndex === null || paletteIndex === undefined || !palette[paletteIndex]) {\n      return {\n        ...baseStyle,\n        backgroundColor: '#ddd'\n      };\n    }\n    const rawTileStyle = palette[paletteIndex];\n    const completeTileStyle = buildCompleteStyle(rawTileStyle);\n    if (rawTileStyle.blend) {\n      const {\n        rows,\n        cols\n      } = gridDimensions;\n      const isSameTile = (r, c) => {\n        var _grid$r;\n        return ((_grid$r = grid[r]) === null || _grid$r === void 0 ? void 0 : _grid$r[c]) === paletteIndex;\n      };\n      const hasTop = rowIndex > 0 && isSameTile(rowIndex - 1, cellIndex);\n      const hasBottom = rowIndex < rows - 1 && isSameTile(rowIndex + 1, cellIndex);\n      const hasLeft = cellIndex > 0 && isSameTile(rowIndex, cellIndex - 1);\n      const hasRight = cellIndex < cols - 1 && isSameTile(rowIndex, cellIndex + 1);\n      if (hasTop) completeTileStyle.borderTop = 'none';\n      if (hasBottom) completeTileStyle.borderBottom = 'none';\n      if (hasLeft) completeTileStyle.borderLeft = 'none';\n      if (hasRight) completeTileStyle.borderRight = 'none';\n      if (hasTop || hasLeft) completeTileStyle.borderTopLeftRadius = 0;\n      if (hasTop || hasRight) completeTileStyle.borderTopRightRadius = 0;\n      if (hasBottom || hasLeft) completeTileStyle.borderBottomLeftRadius = 0;\n      if (hasBottom || hasRight) completeTileStyle.borderBottomRightRadius = 0;\n    }\n    return {\n      ...baseStyle,\n      ...completeTileStyle\n    };\n  };\n  const generateGridCells = () => {\n    const cells = [];\n    for (let row = 0; row < gridDimensions.rows; row++) {\n      for (let col = 0; col < gridDimensions.cols; col++) {\n        cells.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-cell\",\n          onMouseDown: () => handleMouseDown(row, col),\n          onMouseEnter: () => handleMouseEnter(row, col),\n          style: getCellStyle(row, col)\n        }, `${row}-${col}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return cells;\n  };\n  const gridStyle = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${gridDimensions.cols}, ${ZOOM_LEVELS[zoomLevel]}px)`,\n    gridTemplateRows: `repeat(${gridDimensions.rows}, ${ZOOM_LEVELS[zoomLevel]}px)`,\n    gap: showGridLines ? '1px' : '0',\n    justifyContent: 'center',\n    alignContent: 'center',\n    width: '100%',\n    height: '100%',\n    backgroundColor: showGridLines ? '#555' : 'transparent',\n    border: showGridLines ? '1px solid #555' : 'none',\n    overflow: 'hidden'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sandbox\",\n    onMouseUp: () => setIsPainting(false),\n    onMouseLeave: () => setIsPainting(false),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sandbox-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearGrid,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: randomizeGrid,\n        children: \"Randomize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowGridLines(!showGridLines),\n        className: showGridLines ? 'active' : '',\n        children: \"Grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zoom-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setZoomLevel(0),\n          className: zoomLevel === 0 ? 'active' : '',\n          children: \"1x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setZoomLevel(1),\n          className: zoomLevel === 1 ? 'active' : '',\n          children: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setZoomLevel(2),\n          className: zoomLevel === 2 ? 'active' : '',\n          children: \"3x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${gridDimensions.rows} Ã— ${gridDimensions.cols}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: gridContainerRef,\n      className: `sandbox-grid ${!showGridLines ? 'no-grid' : ''}`,\n      style: gridStyle,\n      children: generateGridCells()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Sandbox, \"ezgHN7heFPko0OIrUIwTi/fxmsQ=\");\n_c = Sandbox;\nexport default Sandbox;\nvar _c;\n$RefreshReg$(_c, \"Sandbox\");","map":{"version":3,"names":["React","useState","useRef","useLayoutEffect","useEffect","buildCompleteStyle","jsxDEV","_jsxDEV","MIN_GRID_SIZE","MAX_GRID_SIZE","ZOOM_LEVELS","Sandbox","palette","grid","paintCell","clearGrid","randomizeGrid","setGrid","_s","_grid$","_grid$3","isPainting","setIsPainting","showGridLines","setShowGridLines","zoomLevel","setZoomLevel","gridDimensions","setGridDimensions","rows","length","cols","gridContainerRef","updateGridSize","current","width","height","getBoundingClientRect","cellSize","newCols","Math","max","min","floor","newRows","newGrid","Array","from","_","r","c","_grid$2","resizeObserver","ResizeObserver","observe","disconnect","handleMouseDown","rowIndex","cellIndex","handleMouseEnter","getCellStyle","_grid$rowIndex","paletteIndex","baseStyle","boxSizing","undefined","backgroundColor","rawTileStyle","completeTileStyle","blend","isSameTile","_grid$r","hasTop","hasBottom","hasLeft","hasRight","borderTop","borderBottom","borderLeft","borderRight","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","generateGridCells","cells","row","col","push","className","onMouseDown","onMouseEnter","style","fileName","_jsxFileName","lineNumber","columnNumber","gridStyle","display","gridTemplateColumns","gridTemplateRows","gap","justifyContent","alignContent","border","overflow","onMouseUp","onMouseLeave","children","onClick","ref","_c","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/Sandbox/Sandbox.tsx"],"sourcesContent":["import React, { useState, useRef, useLayoutEffect, useEffect } from 'react';\nimport { TileStyle } from '../../data/types';\nimport { buildCompleteStyle } from '../../utils/styleHelpers';\n\ninterface SandboxProps {\n  palette: TileStyle[];\n  grid: (number | null)[][];\n  paintCell: (row: number, col: number) => void;\n  clearGrid: () => void;\n  randomizeGrid: () => void;\n  setGrid: (grid: (number | null)[][]) => void;\n}\n\nconst MIN_GRID_SIZE = 16;\nconst MAX_GRID_SIZE = 64;\nconst ZOOM_LEVELS = [12, 18, 24]; // Cell sizes in pixels\n\nconst Sandbox: React.FC<SandboxProps> = ({\n  palette,\n  grid,\n  paintCell,\n  clearGrid,\n  randomizeGrid,\n  setGrid,\n}) => {\n  const [isPainting, setIsPainting] = useState(false);\n  const [showGridLines, setShowGridLines] = useState(true);\n  const [zoomLevel, setZoomLevel] = useState(1); // Index for ZOOM_LEVELS\n  const [gridDimensions, setGridDimensions] = useState({ rows: grid.length || 16, cols: grid[0]?.length || 16 });\n  const gridContainerRef = useRef<HTMLDivElement>(null);\n\n  useLayoutEffect(() => {\n    const updateGridSize = () => {\n      if (gridContainerRef.current) {\n        const { width, height } = gridContainerRef.current.getBoundingClientRect();\n        const cellSize = ZOOM_LEVELS[zoomLevel] + (showGridLines ? 1 : 0);\n        \n        const newCols = Math.max(MIN_GRID_SIZE, Math.min(MAX_GRID_SIZE, Math.floor(width / cellSize)));\n        const newRows = Math.max(MIN_GRID_SIZE, Math.min(MAX_GRID_SIZE, Math.floor(height / cellSize)));\n\n        if (newRows !== gridDimensions.rows || newCols !== gridDimensions.cols) {\n          setGridDimensions({ rows: newRows, cols: newCols });\n\n          const newGrid = Array.from({ length: newRows }, (_, r) =>\n            Array.from({ length: newCols }, (_, c) => {\n              return r < grid.length && c < (grid[0]?.length || 0) && grid[r] ? grid[r][c] : null;\n            })\n          );\n          setGrid(newGrid);\n        }\n      }\n    };\n\n    updateGridSize();\n\n    const resizeObserver = new ResizeObserver(updateGridSize);\n    if (gridContainerRef.current) {\n      resizeObserver.observe(gridContainerRef.current);\n    }\n\n    return () => resizeObserver.disconnect();\n  }, [zoomLevel, showGridLines, setGrid, grid.length, grid[0]?.length]);\n    \n  useEffect(() => {\n  }, [grid, palette]);\n\n  const handleMouseDown = (rowIndex: number, cellIndex: number) => {\n    setIsPainting(true);\n    paintCell(rowIndex, cellIndex);\n  };\n\n  const handleMouseEnter = (rowIndex: number, cellIndex: number) => {\n    if (isPainting) {\n      paintCell(rowIndex, cellIndex);\n    }\n  };\n\n  const getCellStyle = (rowIndex: number, cellIndex: number): React.CSSProperties => {\n    const paletteIndex = grid[rowIndex]?.[cellIndex];\n    const baseStyle: React.CSSProperties = {\n        width: `${ZOOM_LEVELS[zoomLevel]}px`,\n        height: `${ZOOM_LEVELS[zoomLevel]}px`,\n        boxSizing: 'border-box',\n    };\n\n    if (paletteIndex === null || paletteIndex === undefined || !palette[paletteIndex]) {\n      return { ...baseStyle, backgroundColor: '#ddd' };\n    }\n    \n    const rawTileStyle = palette[paletteIndex];\n    const completeTileStyle = buildCompleteStyle(rawTileStyle);\n\n    if (rawTileStyle.blend) {\n        const { rows, cols } = gridDimensions;\n        const isSameTile = (r: number, c: number) => grid[r]?.[c] === paletteIndex;\n\n        const hasTop = rowIndex > 0 && isSameTile(rowIndex - 1, cellIndex);\n        const hasBottom = rowIndex < rows - 1 && isSameTile(rowIndex + 1, cellIndex);\n        const hasLeft = cellIndex > 0 && isSameTile(rowIndex, cellIndex - 1);\n        const hasRight = cellIndex < cols - 1 && isSameTile(rowIndex, cellIndex + 1);\n\n        if (hasTop) completeTileStyle.borderTop = 'none';\n        if (hasBottom) completeTileStyle.borderBottom = 'none';\n        if (hasLeft) completeTileStyle.borderLeft = 'none';\n        if (hasRight) completeTileStyle.borderRight = 'none';\n        \n        if (hasTop || hasLeft) completeTileStyle.borderTopLeftRadius = 0;\n        if (hasTop || hasRight) completeTileStyle.borderTopRightRadius = 0;\n        if (hasBottom || hasLeft) completeTileStyle.borderBottomLeftRadius = 0;\n        if (hasBottom || hasRight) completeTileStyle.borderBottomRightRadius = 0;\n    }\n\n    return { ...baseStyle, ...completeTileStyle };\n  };\n\n  const generateGridCells = () => {\n    const cells = [];\n    for (let row = 0; row < gridDimensions.rows; row++) {\n      for (let col = 0; col < gridDimensions.cols; col++) {\n        cells.push(\n          <div\n            key={`${row}-${col}`}\n            className=\"grid-cell\"\n            onMouseDown={() => handleMouseDown(row, col)}\n            onMouseEnter={() => handleMouseEnter(row, col)}\n            style={getCellStyle(row, col)}\n          />\n        );\n      }\n    }\n    return cells;\n  };\n\n  const gridStyle: React.CSSProperties = {\n    display: 'grid',\n    gridTemplateColumns: `repeat(${gridDimensions.cols}, ${ZOOM_LEVELS[zoomLevel]}px)`,\n    gridTemplateRows: `repeat(${gridDimensions.rows}, ${ZOOM_LEVELS[zoomLevel]}px)`,\n    gap: showGridLines ? '1px' : '0',\n    justifyContent: 'center',\n    alignContent: 'center',\n    width: '100%',\n    height: '100%',\n    backgroundColor: showGridLines ? '#555' : 'transparent',\n    border: showGridLines ? '1px solid #555' : 'none',\n    overflow: 'hidden',\n  };\n\n  return (\n    <div className=\"sandbox\" onMouseUp={() => setIsPainting(false)} onMouseLeave={() => setIsPainting(false)}>\n        <div className=\"sandbox-controls\">\n            <button onClick={clearGrid}>Clear</button>\n            <button onClick={randomizeGrid}>Randomize</button>\n            <button onClick={() => setShowGridLines(!showGridLines)} className={showGridLines ? 'active' : ''}>\n                Grid\n            </button>\n            <div className=\"zoom-controls\">\n                <button onClick={() => setZoomLevel(0)} className={zoomLevel === 0 ? 'active' : ''}>1x</button>\n                <button onClick={() => setZoomLevel(1)} className={zoomLevel === 1 ? 'active' : ''}>2x</button>\n                <button onClick={() => setZoomLevel(2)} className={zoomLevel === 2 ? 'active' : ''}>3x</button>\n            </div>\n            <span>{`${gridDimensions.rows} Ã— ${gridDimensions.cols}`}</span>\n        </div>\n      <div \n        ref={gridContainerRef} \n        className={`sandbox-grid ${!showGridLines ? 'no-grid' : ''}`}\n        style={gridStyle}\n      >\n        {generateGridCells()}\n      </div>\n    </div>\n  );\n};\n\nexport default Sandbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}