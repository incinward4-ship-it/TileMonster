{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/Export/Export.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Export = ({\n  palette,\n  grid\n}) => {\n  _s();\n  const [copySuccess, setCopySuccess] = useState('');\n  const cssKeyToKebab = key => key.replace(/[A-Z]/g, match => `-${match.toLowerCase()}`);\n  const formatCssProperties = styles => Object.entries(styles).map(([key, value]) => `  ${cssKeyToKebab(key)}: ${value};`).join('\\n');\n  const generateCss = () => {\n    var _grid$;\n    const gridWidth = ((_grid$ = grid[0]) === null || _grid$ === void 0 ? void 0 : _grid$.length) || 0;\n    const gridHeight = grid.length;\n    const paletteCss = palette.map((style, index) => `.tile-style-${index} {\\n${formatCssProperties(style)}\\n}`).join('\\n\\n');\n    const gridCss = `\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(${gridWidth}, 20px);\n  grid-template-rows: repeat(${gridHeight}, 20px);\n  width: ${gridWidth * 20}px;\n  height: ${gridHeight * 20}px;\n}\n\n.grid-cell {\n  width: 20px;\n  height: 20px;\n}`;\n    return `/* Palette Styles */\\n${paletteCss}\\n\\n/* Grid Styles */\\n${gridCss}`;\n  };\n  const generateHtml = () => {\n    return `<div class=\"grid-container\">\\n${grid.flatMap((row, rowIndex) => row.map((cell, cellIndex) => `  <div class=\"grid-cell ${cell !== null ? `tile-style-${cell}` : ''}\"></div>`)).join('\\n')}\\n</div>`;\n  };\n  const downloadFile = (content, fileName, mimeType) => {\n    const blob = new Blob([content], {\n      type: mimeType\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"export-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Export\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"CSS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: generateCss()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => downloadFile(generateCss(), 'styles.css', 'text/css'),\n      children: \"Download CSS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"HTML\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: generateHtml()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => downloadFile(generateHtml(), 'index.html', 'text/html'),\n      children: \"Download HTML\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Export, \"e3MGcg/7LyrjalZLorA+oJTaykY=\");\n_c = Export;\nexport default Export;\nvar _c;\n$RefreshReg$(_c, \"Export\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Export","palette","grid","_s","copySuccess","setCopySuccess","cssKeyToKebab","key","replace","match","toLowerCase","formatCssProperties","styles","Object","entries","map","value","join","generateCss","_grid$","gridWidth","length","gridHeight","paletteCss","style","index","gridCss","generateHtml","flatMap","row","rowIndex","cell","cellIndex","downloadFile","content","fileName","mimeType","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","className","children","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/Export/Export.tsx"],"sourcesContent":["\nimport React, { useState } from 'react';\n\ninterface ExportProps {\n  palette: React.CSSProperties[];\n  grid: (number | null)[][];\n}\n\nconst Export: React.FC<ExportProps> = ({ palette, grid }) => {\n  const [copySuccess, setCopySuccess] = useState('');\n\n  const cssKeyToKebab = (key: string) =>\n    key.replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);\n\n  const formatCssProperties = (styles: React.CSSProperties): string =>\n    Object.entries(styles)\n      .map(([key, value]) => `  ${cssKeyToKebab(key)}: ${value};`)\n      .join('\\n');\n\n  const generateCss = () => {\n    const gridWidth = grid[0]?.length || 0;\n    const gridHeight = grid.length;\n\n    const paletteCss = palette\n      .map((style, index) => `.tile-style-${index} {\\n${formatCssProperties(style)}\\n}`)\n      .join('\\n\\n');\n\n    const gridCss = `\n.grid-container {\n  display: grid;\n  grid-template-columns: repeat(${gridWidth}, 20px);\n  grid-template-rows: repeat(${gridHeight}, 20px);\n  width: ${gridWidth * 20}px;\n  height: ${gridHeight * 20}px;\n}\n\n.grid-cell {\n  width: 20px;\n  height: 20px;\n}`;\n\n    return `/* Palette Styles */\\n${paletteCss}\\n\\n/* Grid Styles */\\n${gridCss}`;\n  };\n\n  const generateHtml = () => {\n    return `<div class=\"grid-container\">\\n${grid\n      .flatMap((row, rowIndex) =>\n        row.map((cell, cellIndex) => \n          `  <div class=\"grid-cell ${cell !== null ? `tile-style-${cell}` : ''}\"></div>`\n        )\n      )\n      .join('\\n')}\\n</div>`;\n  };\n\n  const downloadFile = (content: string, fileName: string, mimeType: string) => {\n    const blob = new Blob([content], { type: mimeType });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  return (\n    <div className=\"export-section\">\n      <h3>Export</h3>\n      <h4>CSS</h4>\n      <pre>{generateCss()}</pre>\n      <button onClick={() => downloadFile(generateCss(), 'styles.css', 'text/css')}>Download CSS</button>\n      <h4>HTML</h4>\n      <pre>{generateHtml()}</pre>\n      <button onClick={() => downloadFile(generateHtml(), 'index.html', 'text/html')}>Download HTML</button>\n    </div>\n  );\n};\n\nexport default Export;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}