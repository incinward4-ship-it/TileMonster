{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/Preview/Preview.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Preview = ({\n  tileStyles,\n  isBlendMode,\n  onBlendChange\n}) => {\n  _s();\n  const [grid, setGrid] = useState(Array(3).fill(null).map(() => Array(3).fill(true)));\n  const toggleCell = (row, col) => {\n    const newGrid = grid.map((r, rowIndex) => r.map((c, colIndex) => rowIndex === row && colIndex === col ? !c : c));\n    setGrid(newGrid);\n  };\n  const getBlendedStyles = (row, col) => {\n    if (!grid[row][col]) {\n      return {\n        border: '1px dashed #ccc',\n        backgroundColor: 'transparent'\n      };\n    }\n    const style = {\n      ...tileStyles\n    };\n    if (isBlendMode) {\n      const top = row > 0 && grid[row - 1][col];\n      const bottom = row < 2 && grid[row + 1][col];\n      const left = col > 0 && grid[row][col - 1];\n      const right = col < 2 && grid[row][col + 1];\n      if (top) style.borderTopWidth = 0;\n      if (bottom) style.borderBottomWidth = 0;\n      if (left) style.borderLeftWidth = 0;\n      if (right) style.borderRightWidth = 0;\n      if (top || left) style.borderTopLeftRadius = 0;\n      if (top || right) style.borderTopRightRadius = 0;\n      if (bottom || left) style.borderBottomLeftRadius = 0;\n      if (bottom || right) style.borderBottomRightRadius = 0;\n    }\n    return style;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"1x1 Tile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-tile single-tile\",\n        style: {\n          ...tileStyles,\n          width: 25,\n          height: 25,\n          boxSizing: 'border-box'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"3x3 Grid Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview-grid\",\n        style: {\n          display: 'grid',\n          gridTemplateColumns: 'repeat(3, 25px)',\n          gridTemplateRows: 'repeat(3, 25px)',\n          gap: 0,\n          border: 'none',\n          width: 'fit-content'\n        },\n        children: grid.map((rowArr, r) => rowArr.map((_, c) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => toggleCell(r, c),\n          style: {\n            width: 25,\n            height: 25,\n            cursor: 'pointer',\n            boxSizing: 'border-box',\n            ...getBlendedStyles(r, c)\n          },\n          title: `Cell [${r + 1}, ${c + 1}] - Click to toggle`\n        }, `${r}-${c}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-controls\",\n      style: {\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 6,\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: isBlendMode,\n          onChange: e => onBlendChange(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), \"Blend tiles\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Preview, \"35quaQrx5ygnMQjMqgxzSuXVf7c=\");\n_c = Preview;\nexport default Preview;\nvar _c;\n$RefreshReg$(_c, \"Preview\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Preview","tileStyles","isBlendMode","onBlendChange","_s","grid","setGrid","Array","fill","map","toggleCell","row","col","newGrid","r","rowIndex","c","colIndex","getBlendedStyles","border","backgroundColor","style","top","bottom","left","right","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","children","className","fileName","_jsxFileName","lineNumber","columnNumber","width","height","boxSizing","display","gridTemplateColumns","gridTemplateRows","gap","rowArr","_","onClick","cursor","title","marginTop","alignItems","type","checked","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/Preview/Preview.tsx"],"sourcesContent":["\nimport React, { useState } from 'react';\nimport { TileStyle } from '../../data/types';\n\ninterface PreviewProps {\n  tileStyles: TileStyle;\n  isBlendMode: boolean;\n  onBlendChange: (isBlended: boolean) => void;\n}\n\nconst Preview: React.FC<PreviewProps> = ({ tileStyles, isBlendMode, onBlendChange }) => {\n  const [grid, setGrid] = useState<boolean[][]>(\n    Array(3).fill(null).map(() => Array(3).fill(true))\n  );\n\n  const toggleCell = (row: number, col: number) => {\n    const newGrid = grid.map((r, rowIndex) =>\n      r.map((c, colIndex) => (rowIndex === row && colIndex === col ? !c : c))\n    );\n    setGrid(newGrid);\n  };\n\n  const getBlendedStyles = (row: number, col: number): React.CSSProperties => {\n    if (!grid[row][col]) {\n      return {\n        border: '1px dashed #ccc',\n        backgroundColor: 'transparent',\n      };\n    }\n\n    const style: React.CSSProperties = { ...tileStyles };\n\n    if (isBlendMode) {\n      const top = row > 0 && grid[row - 1][col];\n      const bottom = row < 2 && grid[row + 1][col];\n      const left = col > 0 && grid[row][col - 1];\n      const right = col < 2 && grid[row][col + 1];\n\n      if (top) style.borderTopWidth = 0;\n      if (bottom) style.borderBottomWidth = 0;\n      if (left) style.borderLeftWidth = 0;\n      if (right) style.borderRightWidth = 0;\n\n      if (top || left) style.borderTopLeftRadius = 0;\n      if (top || right) style.borderTopRightRadius = 0;\n      if (bottom || left) style.borderBottomLeftRadius = 0;\n      if (bottom || right) style.borderBottomRightRadius = 0;\n    }\n\n    return style;\n  };\n\n  return (\n    <div>\n        <div className=\"preview-container\">\n            <h3>1x1 Tile</h3>\n            <div\n                className=\"preview-tile single-tile\"\n                style={{\n                  ...tileStyles,\n                  width: 25,\n                  height: 25,\n                  boxSizing: 'border-box',\n                }} />\n        </div>\n      <div className=\"preview-container\">\n        <h3>3x3 Grid Preview</h3>\n        <div\n          className=\"preview-grid\"\n          style={{\n            display: 'grid',\n            gridTemplateColumns: 'repeat(3, 25px)',\n            gridTemplateRows: 'repeat(3, 25px)',\n            gap: 0,\n            border: 'none',\n            width: 'fit-content',\n          }}\n        >\n          {grid.map((rowArr, r) =>\n            rowArr.map((_, c) => (\n              <div\n                key={`${r}-${c}`}\n                onClick={() => toggleCell(r, c)}\n                style={{\n                  width: 25,\n                  height: 25,\n                  cursor: 'pointer',\n                  boxSizing: 'border-box',\n                  ...getBlendedStyles(r, c),\n                }}\n                title={`Cell [${r + 1}, ${c + 1}] - Click to toggle`}\n              />\n            ))\n          )}\n        </div>\n      </div>\n      <div className=\"preview-controls\" style={{ marginTop: '10px' }}>\n        <label style={{ display: 'flex', alignItems: 'center', gap: 6, cursor: 'pointer' }}>\n          <input\n            type=\"checkbox\"\n            checked={isBlendMode}\n            onChange={(e) => onBlendChange(e.target.checked)}\n          />\n          Blend tiles\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default Preview;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}