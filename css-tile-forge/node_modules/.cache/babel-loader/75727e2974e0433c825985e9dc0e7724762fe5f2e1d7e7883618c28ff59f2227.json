{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/AttributeBox/AttributeBox.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// A helper component to render the correct input control for a given attribute definition\nconst AttributeControl = ({\n  definition,\n  value,\n  onChange\n}) => {\n  var _definition$options;\n  switch (definition.controlType) {\n    case 'color':\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: value,\n        onChange: e => onChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 14\n      }, this);\n    case 'slider':\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          min: definition.min,\n          max: definition.max,\n          step: definition.step,\n          value: value,\n          onChange: e => onChange(parseFloat(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [value, definition.id.includes('angle') ? '°' : definition.id.includes('scale') ? '' : 'px']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this);\n    case 'select':\n      return /*#__PURE__*/_jsxDEV(\"select\", {\n        value: value,\n        onChange: e => onChange(e.target.value),\n        children: (_definition$options = definition.options) === null || _definition$options === void 0 ? void 0 : _definition$options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    case 'checkbox':\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: value,\n        onChange: e => onChange(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this);\n    default:\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Unsupported Control Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n  }\n};\n_c = AttributeControl;\nconst AttributeBox = ({\n  attribute,\n  onRemove,\n  onUpdate\n}) => {\n  const {\n    definition,\n    value\n  } = attribute;\n  const handleSubAttributeChange = (subId, subValue) => {\n    onUpdate({\n      ...value,\n      [subId]: subValue\n    });\n  };\n  const renderMultiControls = () => {\n    if (!definition.subAttributes) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"multi-control-group\",\n      children: definition.subAttributes.map(subDef => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-attribute-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [subDef.label, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AttributeControl, {\n          definition: subDef,\n          value: value[subDef.id],\n          onChange: newValue => handleSubAttributeChange(subDef.id, newValue)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, subDef.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attribute-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attribute-box-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: definition.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onRemove,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attribute-box-controls\",\n      children: definition.controlType === 'multi' ? renderMultiControls() : /*#__PURE__*/_jsxDEV(AttributeControl, {\n        definition: definition,\n        value: value,\n        onChange: onUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_c2 = AttributeBox;\nexport default AttributeBox;\nvar _c, _c2;\n$RefreshReg$(_c, \"AttributeControl\");\n$RefreshReg$(_c2, \"AttributeBox\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AttributeControl","definition","value","onChange","_definition$options","controlType","type","e","target","fileName","_jsxFileName","lineNumber","columnNumber","className","children","min","max","step","parseFloat","id","includes","options","map","option","label","checked","_c","AttributeBox","attribute","onRemove","onUpdate","handleSubAttributeChange","subId","subValue","renderMultiControls","subAttributes","subDef","newValue","onClick","_c2","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/AttributeBox/AttributeBox.tsx"],"sourcesContent":["\nimport React from 'react';\nimport { ActiveAttribute } from '../AttributePanel/AttributePanel';\n\ninterface AttributeBoxProps {\n  attribute: ActiveAttribute;\n  onRemove: () => void;\n  onUpdate: (newValue: any) => void;\n}\n\n// A helper component to render the correct input control for a given attribute definition\nconst AttributeControl: React.FC<{ definition: any, value: any, onChange: (value: any) => void }> = ({ definition, value, onChange }) => {\n  switch (definition.controlType) {\n    case 'color':\n      return <input type=\"color\" value={value} onChange={(e) => onChange(e.target.value)} />;\n\n    case 'slider':\n      return (\n        <div className='slider-control'>\n          <input\n            type=\"range\"\n            min={definition.min}\n            max={definition.max}\n            step={definition.step}\n            value={value}\n            onChange={(e) => onChange(parseFloat(e.target.value))}\n          />\n          <span>{value}{definition.id.includes('angle') ? '°' : definition.id.includes('scale') ? '' : 'px'}</span>\n        </div>\n      );\n\n    case 'select':\n      return (\n        <select value={value} onChange={(e) => onChange(e.target.value)}>\n          {definition.options?.map((option: { value: string; label: string }) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      );\n      \n    case 'checkbox':\n        return (\n          <input\n            type=\"checkbox\"\n            checked={value}\n            onChange={(e) => onChange(e.target.checked)}\n          />\n        );\n\n    default:\n      return <p>Unsupported Control Type</p>;\n  }\n};\n\nconst AttributeBox: React.FC<AttributeBoxProps> = ({ attribute, onRemove, onUpdate }) => {\n  const { definition, value } = attribute;\n\n  const handleSubAttributeChange = (subId: string, subValue: any) => {\n    onUpdate({ ...value, [subId]: subValue });\n  };\n\n  const renderMultiControls = () => {\n    if (!definition.subAttributes) return null;\n\n    return (\n      <div className='multi-control-group'>\n        {definition.subAttributes.map((subDef) => (\n          <div key={subDef.id} className='sub-attribute-control'>\n            <label>{subDef.label}:</label>\n            <AttributeControl\n              definition={subDef}\n              value={value[subDef.id]}\n              onChange={(newValue) => handleSubAttributeChange(subDef.id, newValue)}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"attribute-box\">\n      <div className=\"attribute-box-header\">\n        <span>{definition.label}</span>\n        <button onClick={onRemove}>X</button>\n      </div>\n      <div className=\"attribute-box-controls\">\n        {definition.controlType === 'multi' ? (\n          renderMultiControls()\n        ) : (\n          <AttributeControl\n            definition={definition}\n            value={value}\n            onChange={onUpdate}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AttributeBox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}