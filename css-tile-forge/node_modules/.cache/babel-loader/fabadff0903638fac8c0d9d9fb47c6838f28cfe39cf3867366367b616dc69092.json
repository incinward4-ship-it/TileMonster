{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/Sandbox/Sandbox.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MIN_GRID_SIZE = 16;\nconst MAX_GRID_SIZE = 64;\nconst Sandbox = ({\n  palette,\n  grid,\n  setGrid,\n  paintCell,\n  clearGrid,\n  randomizeGrid\n}) => {\n  _s();\n  const [isPainting, setIsPainting] = useState(false);\n  const [zoom, setZoom] = useState(1); // 1x, 2x, 3x\n  const [showGridLines, setShowGridLines] = useState(true);\n  const [gridDimensions, setGridDimensions] = useState({\n    rows: 32,\n    cols: 32\n  });\n  const gridContainerRef = useRef(null);\n  const cellSize = 12 * zoom;\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const {\n          width,\n          height\n        } = entry.contentRect;\n        const newCols = Math.max(MIN_GRID_SIZE, Math.min(MAX_GRID_SIZE, Math.floor(width / (cellSize + 1))));\n        const newRows = Math.max(MIN_GRID_SIZE, Math.min(MAX_GRID_SIZE, Math.floor(height / (cellSize + 1))));\n        setGridDimensions({\n          rows: newRows,\n          cols: newCols\n        });\n      }\n    });\n    if (gridContainerRef.current) {\n      resizeObserver.observe(gridContainerRef.current);\n    }\n    return () => resizeObserver.disconnect();\n  }, [cellSize]);\n  useEffect(() => {\n    setGrid(currentGrid => {\n      const newGrid = Array.from({\n        length: gridDimensions.rows\n      }, () => Array(gridDimensions.cols).fill(null));\n      for (let i = 0; i < Math.min(currentGrid.length, gridDimensions.rows); i++) {\n        for (let j = 0; j < Math.min(currentGrid[i].length, gridDimensions.cols); j++) {\n          newGrid[i][j] = currentGrid[i][j];\n        }\n      }\n      return newGrid;\n    });\n  }, [gridDimensions, setGrid]);\n\n  // Mouse event handlers\n  const handleMouseDown = (row, col) => {\n    setIsPainting(true);\n    paintCell(row, col);\n  };\n  const handleMouseEnter = (row, col) => {\n    if (isPainting) paintCell(row, col);\n  };\n  const handleMouseUp = () => setIsPainting(false);\n  const handleMouseLeave = () => setIsPainting(false);\n  const getCellStyle = (rowIndex, cellIndex) => {\n    var _grid$rowIndex;\n    const paletteIndex = (_grid$rowIndex = grid[rowIndex]) === null || _grid$rowIndex === void 0 ? void 0 : _grid$rowIndex[cellIndex];\n    const baseStyle = {\n      width: `${cellSize}px`,\n      height: `${cellSize}px`\n    };\n    if (paletteIndex === null || paletteIndex === undefined) {\n      return {\n        ...baseStyle,\n        backgroundColor: '#ddd'\n      };\n    }\n    const tileStyle = palette[paletteIndex];\n    return {\n      ...baseStyle,\n      ...tileStyle\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sandbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sandbox-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearGrid,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: randomizeGrid,\n        children: \"Randomize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowGridLines(!showGridLines),\n        className: showGridLines ? 'active' : '',\n        children: \"Grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"zoom-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setZoom(1),\n          className: zoom === 1 ? 'active' : '',\n          children: \"1x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setZoom(2),\n          className: zoom === 2 ? 'active' : '',\n          children: \"2x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setZoom(3),\n          className: zoom === 3 ? 'active' : '',\n          children: \"3x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-dimensions\",\n        children: `${gridDimensions.rows} Ã— ${gridDimensions.cols}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: gridContainerRef,\n      className: `sandbox-grid ${!showGridLines ? 'no-grid' : ''}`,\n      style: {\n        gridTemplateColumns: `repeat(${gridDimensions.cols}, ${cellSize}px)`,\n        gridTemplateRows: `repeat(${gridDimensions.rows}, ${cellSize}px)`\n      },\n      onMouseUp: handleMouseUp,\n      onMouseLeave: handleMouseLeave,\n      children: grid.map((row, rowIndex) => row.map((_, cellIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-cell\",\n        onMouseDown: () => handleMouseDown(rowIndex, cellIndex),\n        onMouseEnter: () => handleMouseEnter(rowIndex, cellIndex),\n        style: getCellStyle(rowIndex, cellIndex)\n      }, `${rowIndex}-${cellIndex}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(Sandbox, \"GUqviJT6ZF/ZaoK+NormIIEK9mA=\");\n_c = Sandbox;\nexport default Sandbox;\nvar _c;\n$RefreshReg$(_c, \"Sandbox\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","MIN_GRID_SIZE","MAX_GRID_SIZE","Sandbox","palette","grid","setGrid","paintCell","clearGrid","randomizeGrid","_s","isPainting","setIsPainting","zoom","setZoom","showGridLines","setShowGridLines","gridDimensions","setGridDimensions","rows","cols","gridContainerRef","cellSize","resizeObserver","ResizeObserver","entries","entry","width","height","contentRect","newCols","Math","max","min","floor","newRows","current","observe","disconnect","currentGrid","newGrid","Array","from","length","fill","i","j","handleMouseDown","row","col","handleMouseEnter","handleMouseUp","handleMouseLeave","getCellStyle","rowIndex","cellIndex","_grid$rowIndex","paletteIndex","baseStyle","undefined","backgroundColor","tileStyle","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","gridTemplateColumns","gridTemplateRows","onMouseUp","onMouseLeave","map","_","onMouseDown","onMouseEnter","_c","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/Sandbox/Sandbox.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { TileStyle } from '../../data/types';\n\ntype GridCell = number | null;\n\ninterface SandboxProps {\n  palette: TileStyle[];\n  grid: GridCell[][];\n  setGrid: React.Dispatch<React.SetStateAction<GridCell[][]>>;\n  paintCell: (row: number, col: number) => void;\n  clearGrid: () => void;\n  randomizeGrid: () => void;\n}\n\nconst MIN_GRID_SIZE = 16;\nconst MAX_GRID_SIZE = 64;\n\nconst Sandbox: React.FC<SandboxProps> = ({\n  palette,\n  grid,\n  setGrid,\n  paintCell,\n  clearGrid,\n  randomizeGrid,\n}) => {\n  const [isPainting, setIsPainting] = useState(false);\n  const [zoom, setZoom] = useState(1); // 1x, 2x, 3x\n  const [showGridLines, setShowGridLines] = useState(true);\n  const [gridDimensions, setGridDimensions] = useState({ rows: 32, cols: 32 });\n  const gridContainerRef = useRef<HTMLDivElement>(null);\n\n  const cellSize = 12 * zoom;\n\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver(entries => {\n      for (let entry of entries) {\n        const { width, height } = entry.contentRect;\n        const newCols = Math.max(MIN_GRID_SIZE, Math.min(MAX_GRID_SIZE, Math.floor(width / (cellSize + 1))));\n        const newRows = Math.max(MIN_GRID_SIZE, Math.min(MAX_GRID_SIZE, Math.floor(height / (cellSize + 1))));\n        \n        setGridDimensions({ rows: newRows, cols: newCols });\n      }\n    });\n\n    if (gridContainerRef.current) {\n      resizeObserver.observe(gridContainerRef.current);\n    }\n\n    return () => resizeObserver.disconnect();\n  }, [cellSize]);\n\n  useEffect(() => {\n    setGrid(currentGrid => {\n      const newGrid: GridCell[][] = Array.from({ length: gridDimensions.rows }, () => Array(gridDimensions.cols).fill(null));\n      for (let i = 0; i < Math.min(currentGrid.length, gridDimensions.rows); i++) {\n        for (let j = 0; j < Math.min(currentGrid[i].length, gridDimensions.cols); j++) {\n          newGrid[i][j] = currentGrid[i][j];\n        }\n      }\n      return newGrid;\n    });\n  }, [gridDimensions, setGrid]);\n\n  // Mouse event handlers\n  const handleMouseDown = (row: number, col: number) => {\n    setIsPainting(true);\n    paintCell(row, col);\n  };\n\n  const handleMouseEnter = (row: number, col: number) => {\n    if (isPainting) paintCell(row, col);\n  };\n\n  const handleMouseUp = () => setIsPainting(false);\n  const handleMouseLeave = () => setIsPainting(false);\n\n  const getCellStyle = (rowIndex: number, cellIndex: number): React.CSSProperties => {\n    const paletteIndex = grid[rowIndex]?.[cellIndex];\n    const baseStyle: React.CSSProperties = {\n      width: `${cellSize}px`,\n      height: `${cellSize}px`,\n    };\n\n    if (paletteIndex === null || paletteIndex === undefined) {\n      return { ...baseStyle, backgroundColor: '#ddd' };\n    }\n\n    const tileStyle = palette[paletteIndex];\n    return { ...baseStyle, ...tileStyle };\n  };\n\n  return (\n    <div className=\"sandbox\">\n      <div className=\"sandbox-controls\">\n        <button onClick={clearGrid}>Clear</button>\n        <button onClick={randomizeGrid}>Randomize</button>\n        <button onClick={() => setShowGridLines(!showGridLines)} className={showGridLines ? 'active' : ''}>\n          Grid\n        </button>\n        <div className=\"zoom-controls\">\n          <button onClick={() => setZoom(1)} className={zoom === 1 ? 'active' : ''}>1x</button>\n          <button onClick={() => setZoom(2)} className={zoom === 2 ? 'active' : ''}>2x</button>\n          <button onClick={() => setZoom(3)} className={zoom === 3 ? 'active' : ''}>3x</button>\n        </div>\n        <div className=\"grid-dimensions\">{`${gridDimensions.rows} Ã— ${gridDimensions.cols}`}</div>\n      </div>\n      <div \n        ref={gridContainerRef}\n        className={`sandbox-grid ${!showGridLines ? 'no-grid' : ''}`}\n        style={{\n          gridTemplateColumns: `repeat(${gridDimensions.cols}, ${cellSize}px)`,\n          gridTemplateRows: `repeat(${gridDimensions.rows}, ${cellSize}px)`,\n        }}\n        onMouseUp={handleMouseUp}\n        onMouseLeave={handleMouseLeave}\n      >\n        {grid.map((row, rowIndex) =>\n          row.map((_, cellIndex) => (\n            <div\n              key={`${rowIndex}-${cellIndex}`}\n              className=\"grid-cell\"\n              onMouseDown={() => handleMouseDown(rowIndex, cellIndex)}\n              onMouseEnter={() => handleMouseEnter(rowIndex, cellIndex)}\n              style={getCellStyle(rowIndex, cellIndex)}\n            />\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Sandbox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}