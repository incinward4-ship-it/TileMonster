{"ast":null,"code":"var _jsxFileName = \"/home/user/TileMonster/css-tile-forge/src/components/StylePalette/StylePalette.tsx\";\nimport React from 'react';\nimport { buildCompleteStyle } from '../../utils/styleHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StylePalette = ({\n  palette,\n  selectedStyleIndices,\n  setSelectedStyleIndices,\n  onUpdate,\n  onEvolve,\n  onDelete,\n  livePreviewStyle\n}) => {\n  const handleTileClick = index => {\n    const currentIndex = selectedStyleIndices.indexOf(index);\n    let newSelected;\n    if (currentIndex === -1) {\n      if (selectedStyleIndices.length < 2) {\n        newSelected = [...selectedStyleIndices, index];\n      } else {\n        newSelected = [selectedStyleIndices[1], index];\n      }\n    } else {\n      newSelected = selectedStyleIndices.filter(i => i !== index);\n    }\n    setSelectedStyleIndices(newSelected);\n  };\n  const getBorderStyle = index => {\n    const selectionIndex = selectedStyleIndices.indexOf(index);\n    if (selectionIndex === -1) return '1px solid #ccc';\n    if (selectedStyleIndices.length === 2) {\n      if (selectionIndex === 0) return '3px solid gold';\n      if (selectionIndex === 1) return '3px solid silver';\n    }\n    return '3px solid #007bff';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"style-palette\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: '12px',\n        marginBottom: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Style Palette (\", palette.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"palette-action-button\",\n        onClick: onUpdate,\n        disabled: selectedStyleIndices.length !== 1,\n        title: \"Update selected style (requires 1 style)\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"palette-action-button\",\n        onClick: onEvolve,\n        disabled: selectedStyleIndices.length !== 2,\n        title: \"Evolve selected styles (requires 2 styles)\",\n        children: \"Evolve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"palette-action-button\",\n        onClick: onDelete,\n        disabled: selectedStyleIndices.length === 0,\n        title: \"Delete selected styles\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palette-tiles\",\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        gap: '8px'\n      },\n      children: [palette.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: '#ccc',\n          fontSize: '12px',\n          margin: 0\n        },\n        children: \"No saved styles.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 34\n      }, this), palette.map((style, index) => {\n        const isSelected = selectedStyleIndices.includes(index) && selectedStyleIndices.length === 1;\n        const displayStyle = isSelected ? livePreviewStyle : buildCompleteStyle(style);\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"palette-tile\",\n          onClick: () => handleTileClick(index),\n          style: {\n            background: 'none',\n            border: 'none',\n            padding: 0,\n            cursor: 'pointer',\n            width: 44,\n            height: 44,\n            minWidth: 'auto'\n          },\n          \"aria-label\": `Select style ${index + 1}`,\n          title: `Select style ${index + 1}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '100%',\n              height: '100%',\n              border: getBorderStyle(index),\n              borderRadius: 6,\n              padding: 2,\n              boxSizing: 'border-box'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                ...displayStyle,\n                width: '100%',\n                height: '100%',\n                borderRadius: 3,\n                boxSizing: 'border-box'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_c = StylePalette;\nexport default StylePalette;\nvar _c;\n$RefreshReg$(_c, \"StylePalette\");","map":{"version":3,"names":["React","buildCompleteStyle","jsxDEV","_jsxDEV","StylePalette","palette","selectedStyleIndices","setSelectedStyleIndices","onUpdate","onEvolve","onDelete","livePreviewStyle","handleTileClick","index","currentIndex","indexOf","newSelected","length","filter","i","getBorderStyle","selectionIndex","className","children","style","display","alignItems","gap","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","title","flexWrap","color","fontSize","margin","map","isSelected","includes","displayStyle","background","border","padding","cursor","width","height","minWidth","borderRadius","boxSizing","_c","$RefreshReg$"],"sources":["/home/user/TileMonster/css-tile-forge/src/components/StylePalette/StylePalette.tsx"],"sourcesContent":["import React from 'react';\nimport { TileStyle } from '../../data/types';\nimport { buildCompleteStyle } from '../../utils/styleHelpers';\n\ninterface StylePaletteProps {\n  palette: TileStyle[];\n  selectedStyleIndices: number[];\n  setSelectedStyleIndices: (indices: number[]) => void;\n  onUpdate: () => void;\n  onEvolve: () => void;\n  onDelete: () => void;\n  livePreviewStyle?: React.CSSProperties;\n}\n\nconst StylePalette: React.FC<StylePaletteProps> = ({\n  palette,\n  selectedStyleIndices,\n  setSelectedStyleIndices,\n  onUpdate,\n  onEvolve,\n  onDelete,\n  livePreviewStyle,\n}) => {\n  const handleTileClick = (index: number) => {\n    const currentIndex = selectedStyleIndices.indexOf(index);\n    let newSelected: number[];\n\n    if (currentIndex === -1) {\n      if (selectedStyleIndices.length < 2) {\n        newSelected = [...selectedStyleIndices, index];\n      } else {\n        newSelected = [selectedStyleIndices[1], index];\n      }\n    } else {\n      newSelected = selectedStyleIndices.filter(i => i !== index);\n    }\n    setSelectedStyleIndices(newSelected);\n  };\n\n  const getBorderStyle = (index: number) => {\n    const selectionIndex = selectedStyleIndices.indexOf(index);\n    if (selectionIndex === -1) return '1px solid #ccc';\n\n    if (selectedStyleIndices.length === 2) {\n      if (selectionIndex === 0) return '3px solid gold';\n      if (selectionIndex === 1) return '3px solid silver';\n    }\n    \n    return '3px solid #007bff';\n  };\n\n  return (\n    <div className=\"style-palette\">\n      <div style={{ display: 'flex', alignItems: 'center', gap: '12px', marginBottom: '8px' }}>\n        <h3>Style Palette ({palette.length})</h3>\n        <button\n          className='palette-action-button'\n          onClick={onUpdate}\n          disabled={selectedStyleIndices.length !== 1}\n          title=\"Update selected style (requires 1 style)\"\n        >\n          Update\n        </button>\n        <button\n         className='palette-action-button'\n          onClick={onEvolve}\n          disabled={selectedStyleIndices.length !== 2}\n          title=\"Evolve selected styles (requires 2 styles)\"\n        >\n          Evolve\n        </button>\n        <button\n          className='palette-action-button'\n          onClick={onDelete}\n          disabled={selectedStyleIndices.length === 0}\n          title=\"Delete selected styles\"\n        >\n          Delete\n        </button>\n      </div>\n      <div className=\"palette-tiles\" style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>\n        {palette.length === 0 && <p style={{ color: '#ccc', fontSize: '12px', margin: 0 }}>No saved styles.</p>}\n        {palette.map((style, index) => {\n          const isSelected = selectedStyleIndices.includes(index) && selectedStyleIndices.length === 1;\n          const displayStyle = isSelected ? livePreviewStyle : buildCompleteStyle(style);\n          \n          return (\n            <button\n              className=\"palette-tile\"\n              key={index}\n              onClick={() => handleTileClick(index)}\n              style={{\n                background: 'none',\n                border: 'none',\n                padding: 0,\n                cursor: 'pointer',\n                width: 44,\n                height: 44,\n                minWidth: 'auto',\n              }}\n              aria-label={`Select style ${index + 1}`}\n              title={`Select style ${index + 1}`}\n            >\n              <div \n                style={{\n                  width: '100%',\n                  height: '100%',\n                  border: getBorderStyle(index),\n                  borderRadius: 6,\n                  padding: 2,\n                  boxSizing: 'border-box',\n                }}\n              >\n                <div \n                  style={{\n                    ...displayStyle,\n                    width: '100%',\n                    height: '100%',\n                    borderRadius: 3,\n                    boxSizing: 'border-box',\n                  }}\n                />\n              </div>\n            </button>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default StylePalette;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}